services:
  postgres:
    image: postgres:15-alpine
    container_name: rbac_postgres_dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rbac_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: rbac_backend_dev
    ports:
      - '3000:3000'
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: rbac_db
      JWT_SECRET: rbac-dev-jwt-secret-2025-do-not-use-in-production
      JWT_EXPIRATION: 24h
      FRONTEND_URL: http://localhost:3001
      PORT: 3000
      NODE_ENV: development
    depends_on:
      postgres:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: rbac_frontend_dev
    ports:
      - '3001:3000'
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3000
      NODE_ENV: development
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src

volumes:
  postgres_dev_data:
